package JCompiler.Scanner;

import java.util.HashMap;

public class LexName extends HashMap<Lex, String> {
    public LexName() {
        this.put(Lex.ABSTRACT, "abstract");
        this.put(Lex.CONTINUE, "continue");
        this.put(Lex.FOR, "for");
        this.put(Lex.NEW, "new");
        this.put(Lex.SWITCH, "switch");
        this.put(Lex.ASSERT, "assert");
        this.put(Lex.DEFAULT, "default");
        this.put(Lex.IF, "if");
        this.put(Lex.PACKAGE, "package");
        this.put(Lex.SYNCHRONIZED, "synchronized");
        this.put(Lex.BOOLEAN, "boolean");
        this.put(Lex.DO, "do");
        this.put(Lex.GOTO, "goto");
        this.put(Lex.PRIVATE, "private");
        this.put(Lex.THIS, "this");
        this.put(Lex.BREAK, "break");
        this.put(Lex.DOUBLE, "double");
        this.put(Lex.IMPLEMENTS, "implements");
        this.put(Lex.PROTECTED, "protected");
        this.put(Lex.THROW, "throw");
        this.put(Lex.BYTE, "byte");
        this.put(Lex.ELSE, "else");
        this.put(Lex.IMPORT, "import");
        this.put(Lex.PUBLIC, "public");
        this.put(Lex.THROWS, "throws");
        this.put(Lex.CASE, "case");
        this.put(Lex.ENUM, "enum");
        this.put(Lex.INSTANCEOF, "instanceof");
        this.put(Lex.RETURN, "return");
        this.put(Lex.TRANSIENT, "transient");
        this.put(Lex.CATCH, "catch");
        this.put(Lex.EXTENDS, "extends");
        this.put(Lex.INT, "int");
        this.put(Lex.SHORT, "short");
        this.put(Lex.TRY, "try");
        this.put(Lex.CHAR, "char");
        this.put(Lex.FINAL, "final");
        this.put(Lex.INTERFACE, "interface");
        this.put(Lex.STATIC, "static");
        this.put(Lex.VOID, "void");
        this.put(Lex.CLASS, "class");
        this.put(Lex.FINALLY, "finally");
        this.put(Lex.LONG, "long");
        this.put(Lex.STRICTFP, "strictfp");
        this.put(Lex.VOLATILE, "volatile");
        this.put(Lex.CONST, "const");
        this.put(Lex.FLOAT, "float");
        this.put(Lex.NATIVE, "native");
        this.put(Lex.SUPER, "super");
        this.put(Lex.WHILE, "while");
        this.put(Lex.BOOLEAN_LIT, "Логическое");
        this.put(Lex.NULL_LIT, "null");
        this.put(Lex.EOT, "eot");
        this.put(Lex.NAME, "Имя");
        this.put(Lex.INT_LIT, "Целое");
        this.put(Lex.FLOAT_POINT_LIT, "Дробное");
        this.put(Lex.CH_LIT, "Символьное");
        this.put(Lex.STRING_LIT, "Строковое");
        this.put(Lex.L_PAR, "(");
        this.put(Lex.R_PAR, ")");
        this.put(Lex.L_BRACE, "this.put(Lex.");
        this.put(Lex.R_BRACE, "}");
        this.put(Lex.L_SQR_BR, "[");
        this.put(Lex.R_SQR_BR, "]");
        this.put(Lex.SEMI, ";");
        this.put(Lex.COMMA, ",");
        this.put(Lex.DOT, ".");
        this.put(Lex.ELL, "...");
        this.put(Lex.AT, "@");
        this.put(Lex.DOUBLE_COLON, "::");
        this.put(Lex.ASSIGN, "=");
        this.put(Lex.GT, ">");
        this.put(Lex.LT, "<");
        this.put(Lex.NOT, "!");
        this.put(Lex.TILDE, "~");
        this.put(Lex.QMARK, "?");
        this.put(Lex.COLON, ":");
        this.put(Lex.R_ARROW, "->");
        this.put(Lex.EQ, "==");
        this.put(Lex.GE, ">=");
        this.put(Lex.LE, "<=");
        this.put(Lex.NE, "!=");
        this.put(Lex.DOUBLE_AND, "&&");
        this.put(Lex.DOUBLE_OR, "||");
        this.put(Lex.INC, "++");
        this.put(Lex.DEC, "--");
        this.put(Lex.PLUS, "+");
        this.put(Lex.MINUS, "-");
        this.put(Lex.MULT, "*");
        this.put(Lex.DIV, "/");
        this.put(Lex.AND, "&");
        this.put(Lex.OR, "|");
        this.put(Lex.XOR, "^");
        this.put(Lex.PERCENT, "%");
        this.put(Lex.L_SHIFT, "<<");
        this.put(Lex.R_SHIFT, ">>");
        this.put(Lex.Z_R_SHIFT, ">>>");
        this.put(Lex.PLUS_ASSIGN, "+=");
        this.put(Lex.MINUS_ASSIGN, "-=");
        this.put(Lex.MULT_ASSIGN, "*=");
        this.put(Lex.DIV_ASSIGN, "/=");
        this.put(Lex.AND_ASSIGN, "&=");
        this.put(Lex.OR_ASSIGN, "|=");
        this.put(Lex.XOR_ASSIGN, "^=");
        this.put(Lex.PERCENT_ASSIGN, "%=");
        this.put(Lex.L_SHIFT_ASSIGN, "<<=");
        this.put(Lex.R_SHIFT_ASSIGN, ">>=");
        this.put(Lex.Z_R_SHIFT_ASSIGN, ">>>=");
    }
}
